# coding: utf-8

#
# Copyright 2014-2017 Groupon, Inc.
# Copyright 2014-2017 The Billing Project, LLC
#
# The Billing Project, LLC licenses this file to you under the Apache License, version 2.0
# (the "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at:
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#

"""
    Kill Bill

    Kill Bill is an open-source billing and payments platform  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import killbill
from api.payment_api import PaymentApi  # noqa: E501
from killbill.rest import ApiException


class TestPaymentApi(unittest.TestCase):
    """PaymentApi unit test stubs"""

    def setUp(self):
        self.api = api.payment_api.PaymentApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_cancel_scheduled_payment_transaction_by_external_key(self):
        """Test case for cancel_scheduled_payment_transaction_by_external_key

        Cancels a scheduled payment attempt retry  # noqa: E501
        """
        pass

    def test_cancel_scheduled_payment_transaction_by_id(self):
        """Test case for cancel_scheduled_payment_transaction_by_id

        Cancels a scheduled payment attempt retry  # noqa: E501
        """
        pass

    def test_capture_authorization(self):
        """Test case for capture_authorization

        Capture an existing authorization  # noqa: E501
        """
        pass

    def test_capture_authorization_by_external_key(self):
        """Test case for capture_authorization_by_external_key

        Capture an existing authorization  # noqa: E501
        """
        pass

    def test_chargeback_payment(self):
        """Test case for chargeback_payment

        Record a chargeback  # noqa: E501
        """
        pass

    def test_chargeback_payment_by_external_key(self):
        """Test case for chargeback_payment_by_external_key

        Record a chargeback  # noqa: E501
        """
        pass

    def test_chargeback_reversal_payment(self):
        """Test case for chargeback_reversal_payment

        Record a chargeback reversal  # noqa: E501
        """
        pass

    def test_chargeback_reversal_payment_by_external_key(self):
        """Test case for chargeback_reversal_payment_by_external_key

        Record a chargeback reversal  # noqa: E501
        """
        pass

    def test_complete_transaction(self):
        """Test case for complete_transaction

        Complete an existing transaction  # noqa: E501
        """
        pass

    def test_complete_transaction_by_external_key(self):
        """Test case for complete_transaction_by_external_key

        Complete an existing transaction  # noqa: E501
        """
        pass

    def test_create_combo_payment(self):
        """Test case for create_combo_payment

        Combo api to create a new payment transaction on a existing (or not) account   # noqa: E501
        """
        pass

    def test_create_payment_custom_fields(self):
        """Test case for create_payment_custom_fields

        Add custom fields to payment  # noqa: E501
        """
        pass

    def test_create_payment_tags(self):
        """Test case for create_payment_tags

        Add tags to payment payment  # noqa: E501
        """
        pass

    def test_delete_payment_custom_fields(self):
        """Test case for delete_payment_custom_fields

        Remove custom fields from payment payment  # noqa: E501
        """
        pass

    def test_delete_payment_tags(self):
        """Test case for delete_payment_tags

        Remove tags from payment payment  # noqa: E501
        """
        pass

    def test_get_payment(self):
        """Test case for get_payment

        Retrieve a payment by id  # noqa: E501
        """
        pass

    def test_get_payment_by_external_key(self):
        """Test case for get_payment_by_external_key

        Retrieve a payment by external key  # noqa: E501
        """
        pass

    def test_get_payment_custom_fields(self):
        """Test case for get_payment_custom_fields

        Retrieve payment custom fields  # noqa: E501
        """
        pass

    def test_get_payment_tags(self):
        """Test case for get_payment_tags

        Retrieve payment payment tags  # noqa: E501
        """
        pass

    def test_get_payments(self):
        """Test case for get_payments

        Get payments  # noqa: E501
        """
        pass

    def test_modify_payment_custom_fields(self):
        """Test case for modify_payment_custom_fields

        Modify custom fields to payment  # noqa: E501
        """
        pass

    def test_refund_payment(self):
        """Test case for refund_payment

        Refund an existing payment  # noqa: E501
        """
        pass

    def test_refund_payment_by_external_key(self):
        """Test case for refund_payment_by_external_key

        Refund an existing payment  # noqa: E501
        """
        pass

    def test_search_payments(self):
        """Test case for search_payments

        Search payments  # noqa: E501
        """
        pass

    def test_void_payment(self):
        """Test case for void_payment

        Void an existing payment  # noqa: E501
        """
        pass

    def test_void_payment_by_external_key(self):
        """Test case for void_payment_by_external_key

        Void an existing payment  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
